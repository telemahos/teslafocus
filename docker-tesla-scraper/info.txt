- python3 -m venv myenv 
- ./ngrok http 8000 
- ngrok http 8000 (on Windows)
- .\myenv\Scripts\activate.bat (On windows)
- source myenv/bin/activate
- pip3 install --upgrade pip
- pip3 install -r backend/docs/requirements.txt
- uvicorn main:app --reload
- OR Online: supervisord -n 
- npm install
- npm run serve
- npm run 
- npm run build
- To deploy install node.js server: sudo npm install -g serve 
--- AND THEN --- 
serve -s dist --OR--
serve -s dist -l 3001
 
-- GUVICORN -- 
pip install "uvicorn[standard]" gunicorn
- gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 93.127.202.194:8000

uvicorn main:app --host 93.127.202.194 --port 8000 --workers 4

-- UPDATE --
uvicorn main:app --host 93.127.202.194 --port 8073

-- PYTHON VERSION AUSWAEHLEN --
- sudo alternatives --config python3
- python3 --version

--- Mit SSL CERTIFICATE: ---
1. uvicorn main:app --host 93.127.202.194 --port 8073 --ssl-keyfile=/etc/letsencrypt/live/srv516119.hstgr.cloud/privkey.pem --ssl-certfile=/etc/letsencrypt/live/srv516119.hstgr.cloud/fullchain.pem
2. LAUFT IM HINTERGRUND mit SSL:
nohup uvicorn main:app --host 93.127.202.194 --port 8073 --ssl-keyfile=/etc/letsencrypt/live/srv516119.hstgr.cloud/privkey.pem --ssl-certfile=/etc/letsencrypt/live/srv516119.hstgr.cloud/fullchain.pem > uvicorn_ssl.log 2>&1 &

Wichtige Hinweise:
- Sicherheit: Binden an eine externe IP-Adresse kann Sicherheitsrisiken bergen, besonders wenn Sie SSL verwenden. Es ist oft besser, einen Reverse Proxy wie Nginx zu verwenden, der SSL-Terminierung übernimmt und den Verkehr an Ihren Uvicorn-Server weiterleitet.
- Log-Datei: Überprüfen Sie regelmäßig die uvicorn_ssl.log Datei auf Fehler oder Warnungen, um sicherzustellen, dass Ihre Anwendung ordnungsgemäß läuft.
- Prozessverwaltung: Da nohup den Prozess im Hintergrund ausführt, können Sie den Prozess mit ps aux | grep uvicorn finden, um zu sehen, ob er läuft. Um ihn zu beenden, verwenden Sie kill <PID>.
- Automatischer Neustart: Mit nohup läuft der Prozess, bis er manuell gestoppt wird oder ein Fehler auftritt. Für Produktionsumgebungen könnte eine Lösung mit systemd oder einem Prozessmanager wie PM2 besser geeignet sein, da sie automatisches Neustarten unterstützen.
#######################


-- DOCKER IM VPS --
- sudo systemctl start docker
- sudo systemctl status docker
- docker pull mcr.microsoft.com/playwright:v1.48.0-focal
- docker run --rm -v $(pwd)/data:/app/data tesla-scraper
- docker build -t tesla-scraper .
- docker build -t tesla-scraper . --no-cache
- docker run -it tesla-scraper (Run Scraper)
- docker run -d tesla-scraper (Run Scraper im Hintergrund)
- docker run -v /home/srv516119.hstgr.cloud/public_html/teslafocus/tesla-scraper/data/de:/app/data -it tesla-scraper



-- Number Formater --
npm install @coders-tm/vue-number-format
from: https://vuejsexamples.com/easy-formatted-numbers-currency-and-percentage-with-input-directive-mask-for-vue-js/

--- Run on server in background--- 
https://www.dev2qa.com/how-to-run-node-js-server-in-background/?fbclid=IwAR2JS1SkAlFbhsak4csMYuVkuFRpxiGzi1wYKos_QZurQMxcQRbcWSkZpTM
npm install --global http-server
npm install pm2 -g
pm2 start http-server -p 3001 > output6.log
for reboot pm2: pm2 startup systemd
or simple server:
http-server -p 3001 > output.log &
check proccess: ps -ef
or: forever start http-server -p 3001 > output.log
or THISSS: pm2 serve dist 3001
185.237.97.166
lsof -i :8000       --this check the port 8000

---
from https://www.dev2qa.com/how-to-run-node-js-server-in-background/?fbclid=IwAR2JS1SkAlFbhsak4csMYuVkuFRpxiGzi1wYKos_QZurQMxcQRbcWSkZpTM
in /etc/systemd/system
node-app-service-name.service

npm install -g @vue/cli
npm i @vue/cli-service

--- PRODUCTION OR DEV ---
- npm install --production --force
https://www.digitalocean.com/community/tutorials/how-to-use-vue-js-environment-modes-with-a-node-js-mock-data-layer

- pip3 install supervisor AND THEN START: supervisord -n
- uvicorn backend.main:app --host 185.237.97.166: --port 8000
--- Clean NPM: ---
npm cache clean --force
rm -rf node_modules
npm install

--- Server ---
138.3.240.21
ubuntu

- pip install fastapi-pagination[all]
- https://www.learmoreseekmore.com/2021/02/vue3-vue-tailwind-pagination.html
    npm install --save @ocrv/vue-tailwind-pagination
- npm install vue-chartjs chart.js@2.9.4
- npm install @vueform/multiselect 
More info on(https://github.com/vueform/multiselect#styling)
- npm install cors
- npm install moment
- npm install VueTailwindPagination

--- FRONTEND ---
- SamrtTable: https://vue-smart-table.netlify.app/getting-started.html#why-smart-table
npm install vuejs-smart-table@next



- VS Theme: "One Dark Pro Darker", "Noctis Azureus", 'Bluloco Dark theme', 'NoctisUva', 'Viow Flat', "Adapta Nikto"
- requirements => fastapi==0.66.0 αν θέλουμε μια συξκερκιμένη έκδοση

--------------
routers -> controller
repository -> model
--------------
User Roles:
no Role -> 0
Admin -> 1
Frontend Developer -> 2
Backend Developer -> 3
Full Stack Developer -> 4
UI/UX Designer -> 5
QA Analyst -> 6
Business Analyst -> 7
Product Manager -> 8
Technology Manager -> 9
Demo -> 10
--------------
Issue, Bug, Priority:
Low -> 0
Medium -> 1
High -> 2
Critical -> 3
--------------
Cases:
Issue -> 0
Bug -> 1
Note -> 2
--------------
Team:
id, user_id, project_id, team_role, assign_date, active, note

--------------
Git to work on Win10 with VS Code:
Step 1 in your project folder run start-ssh-agent
Step 2 add your id_rsa or whatever name of your private RSA key password
Step 3 in the same directory open the cmd or power shell and run code
--------------
FRONTEND:
eslint Fehlemeldung -> Loesung fuer Windows:
.\node_modules\.bin\eslint src\** --fix
-> Loesung fuer Mac:
npm run lint -- --fix
--------------
Python3 Switch Version
brew unlink python@3.9
brew unlink python@3.8
brew link --force python@3.9
--------------
- Manually Extending SSL to WWW:
https://community.cyberpanel.net/t/3-manually-extending-ssl-to-www/89


###### ON SERVER 93.127.202.194 ########
- uvicorn main:app --host 93.127.202.194 --port 8000 --http h2 --reload
- pip install hypercorn
- hypercorn main:app --bind 93.127.202.194:8000 --certfile cert.pem --keyfile key.pem --config example_hypercorn_config.py
######
- hypercorn main:app --bind 93.127.202.194:8000 --certfile new_cert.pem --keyfile new_key.pem

